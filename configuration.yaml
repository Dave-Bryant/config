

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:
bluetooth:


recorder:
  db_url: !secret mariadb_password
  purge_keep_days: 60
  exclude:
    entity_globs:
      - sensor.wupws_weather* # old sensors
      - sensor.pws_forecast_narrative* # just words
      - binary_sensor.ewelink*  # motion sensors
      - sensor.spare_switch_2* #power consumption
      - number.* #musicast
      - sensor.watchman*
      - sensor.flightradar24*
    entities:
      - sensor.garage_pi_sensors_garage_pi_last_message

influxdb:
  # host: a0d7b954-influxdb
  host: 10.0.0.55
  port: 8086
  database: homeassistant
  username: homeassistant
  password: !secret influxdb_password
  max_retries: 3
  default_measurement: state
  include:
    # entities:
    #   - sensor.helium_wallet_14rtp7ja84zcvwsu6nuf6kbbfwam3qezuulzgvypk1n3jpkdqqu
    #   - sensor.helium_hnt_oracle_price
    #   - sensor.helium_wallet_today
    #   - sensor.helium_wallet_weekly
    #   - sensor.helium_wallet_monthly
    #   - sensor.helium_wallet_value
    domains:
      - sensor
  exclude:
    entities:
    - sensor.garage_pi_sensors_garage_pi_last_message
    entity_globs:     
     - sensor.wupws_weather* # old sensors
     - sensor.pws_forecast_narrative* # just words
     - sensor.watchman*

frontend:
  themes: !include_dir_merge_named themes

lovelace:
  mode: yaml

logger:
  default: warn
  logs:
    custom_components.samsungtv_tizen: error    
    homeassistant.components.media_player: error
    homeassistant.components.pychromecast: error
    custom_components.mbapi2020: error

ffmpeg:

tts:
  - platform: google_translate
    
# mqtt:
#   sensor:
#     - name: 'ground_floor_david'
#       state_topic: 'monitor/ground_floor/davidbluetooth'
#       value_template: '{{ value_json.confidence }}'
#       unit_of_measurement: '%'
#     - name: 'ground_floor_wendy'
#       state_topic: 'monitor/ground_floor/wendybluetooth'
#       value_template: '{{ value_json.confidence }}'
#       unit_of_measurement: '%'

command_line:
  - binary_sensor:
      name: CPU Temperature
      command: "cat /sys/class/thermal/thermal_zone0/temp"
      # If errors occur, make sure configuration file is encoded as UTF-8
      #unit_of_measurement: "°C"
      value_template: '{{ value | multiply(0.001) | round(1) }}'
  
    # for FOSCAM Camera Motion Detection
  - binary_sensor:
      command: !secret front_cam_motion_detection
      name: "Front Camera Motion Cam"
      value_template: >
        {% set status = value | regex_findall_index('Alarm>(\d+)</motion') %}
        {% set values = {'0':'Disabled', '1':'None', '2':'Detected'} %}
        {{ values[status] if status in values.keys() else 'Not Determined'}}
      scan_interval: 20
      command_timeout: 20 
sensor:
  # - platform: min_max
  #   name: "david_occupancy_confidence"
  #   type: max
  #   round_digits: 0
  #   entity_ids:
  #     - sensor.ground_floor_david
  # - platform: min_max
  #   name: "wendy_occupancy_confidence"
  #   type: max
  #   round_digits: 0
  #   entity_ids:
  #     - sensor.ground_floor_wendy
  # - platform: systemmonitor
  #   resources:
  #     - type: memory_use_percent
  #     - type: processor_use
  #     - type: processor_temperature

  
    
  - platform: statistics
    entity_id: sensor.temp
    name: "high_temperature_today"
    state_characteristic: value_max
    max_age:
      minutes: 1440
    sampling_size: 288
  - platform: statistics
    entity_id: sensor.temp
    name: "high_temperature_per_hour"
    state_characteristic: value_max
    max_age:
      minutes: 60
    sampling_size: 12
  - platform: statistics
    entity_id: sensor.temp
    name: "low_temperature_today"
    state_characteristic: value_min
    max_age:
      minutes: 1440
    sampling_size: 288
  - platform: statistics
    entity_id: sensor.temp
    name: "low_temperature_per_hour"
    state_characteristic: value_min
    max_age:
      minutes: 60
    sampling_size: 12
  - platform: statistics
    entity_id: sensor.wendys_bedroom_temp
    name: "Wendys Min Temperature today"
    state_characteristic: value_min
    max_age:
      minutes: 1440
    sampling_size: 288
  - platform: statistics
    entity_id: sensor.humidity
    name: "high_relative_humidity_per_hour"
    state_characteristic: value_max
    max_age:
      minutes: 60
    sampling_size: 12
  - platform: statistics
    entity_id: sensor.humidity
    name: "low_relative_humidity_per_hour"
    state_characteristic: value_min
    max_age:
      minutes: 60
    sampling_size: 12
  
  - platform: min_max   # for the REST Forecast
    name: "precip_chance_today"
    type: max
    entity_ids:
      - sensor.pws_forecast_today
      - sensor.pws_forecast_tonight
  - platform: min_max
    name: "precip_chance_tomorrow"
    type: max
    entity_ids:
      - sensor.pws_forecast_tomorrow
      - sensor.pws_forecast_tomorrow_tonight

  
  # helium  
  - platform: template
    sensors:
      helium_wallet_value:
        value_template: "{{ (states('sensor.helium_price_hnt') | float(0) * states('sensor.helium_wallet_hvhi_hnt_balance') | float(0) * states('sensor.australian_currency') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
      iot_wallet_value:
        value_template: "{{ (states('sensor.helium_price_iot') | float(0) * states('sensor.helium_wallet_hvhi_iot_balance') | float(0) * states('sensor.australian_currency') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
      iot_wallet_value_unclaimed:
        value_template: "{{ (states('sensor.helium_price_iot') | float(0) * states('sensor.helium_hotspot_reward_wallet_hvhi_unclaimed_rewards') | float(0) * states('sensor.australian_currency') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
      sol_wallet_value:
        value_template: "{{ (states('sensor.helium_price_solana') | float(0) * states('sensor.helium_wallet_hvhi_sol_balance') | float(0) * states('sensor.australian_currency') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
      sol_ledger_value:
        value_template: "{{ (states('sensor.helium_price_solana') | float(0) * states('input_number.ledger_solana') | float(0) * states('sensor.australian_currency') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
      aus_wallet_total:
        value_template: "{{ (states('sensor.helium_wallet_value') | float(0) + states('sensor.iot_wallet_value') | float(0) + states('sensor.iot_wallet_value') | float(0) + states('sensor.sol_wallet_value') | float(0) + states('sensor.sol_ledger_value') | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"
 
 # EV Charging
  - platform: template
    sensors:
      ev_charge_cost:
        value_template: "{{ (states('sensor.spare_switch_2_today_s_consumption') | float(0)  * 0.16812 | float(0)) | round(2) }}"
        unit_of_measurement: "AUD"

 # Irrigation Time Sensors
  - platform: template
    sensors:
      garden_watering_time_mins:
        value_template: "{{ (states('input_number.garden_watering_time') | float(0)  / 60 | float(0)) | round(2) }}"
        unit_of_measurement: "min"
      lawn_watering_time_mins:
        value_template: "{{ (states('input_number.lawn_watering_time') | float(0)  / 60 | float(0)) | round(2) }}"
        unit_of_measurement: "min"

 # A/C sensors
  - platform: template
    sensors:
      study_temp:
        friendly_name: 'Study temperature'
        unit_of_measurement: '°C'
        device_class: temperature
        value_template: "{{ state_attr('climate.study', 'current_temperature') }}"
      study_humidity:
        friendly_name: 'Study humidity'
        unit_of_measurement: '%'
        device_class: humidity
        value_template: "{{ state_attr('climate.study', 'current_humidity') }}"
      study_fan_modes:
        friendly_name: 'Study fan modes'
        value_template: "{{ state_attr('climate.study', 'fan_mode') }}"
      hollys_bedroom_temp:
        friendly_name: 'Hollys bedroom temperature'
        unit_of_measurement: '°C'
        device_class: temperature
        value_template: "{{ state_attr('climate.hollys_bedroom', 'current_temperature') }}"
      hollys_bedroom_humidity:
        friendly_name: 'Hollys bedroom humidity'
        unit_of_measurement: '%'
        device_class: humidity
        value_template: "{{ state_attr('climate.hollys_bedroom', 'current_humidity') }}"
      wendys_bedroom_temp:
        friendly_name: 'Wendys bedroom temperature'
        unit_of_measurement: '°C'
        device_class: temperature
        value_template: "{{ state_attr('climate.wendys_bedroom', 'current_temperature') }}"
      wendys_bedroom_humidity:
        friendly_name: 'Wendys bedroom humidity'
        unit_of_measurement: '%'
        device_class: humidity
        value_template: "{{ state_attr('climate.wendys_bedroom', 'current_humidity') }}"
      family_room_temp:
        friendly_name: 'Family room temperature'
        unit_of_measurement: '°C'
        device_class: temperature
        value_template: "{{ state_attr('climate.family_room', 'current_temperature') }}"
      family_room_humidity:
        friendly_name: 'Family_room humidity'
        unit_of_measurement: '%'
        device_class: humidity
        value_template: "{{ state_attr('climate.family_room', 'current_humidity') }}"


  
# WUNDERGROUND_REST
rest:
  - authentication: basic
    resource: !secret wunderground_url_forecast
    scan_interval: 300
    sensor:
      - name: "pws_forecast_narrative_today"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_narrative_today','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_today','daypart')[0].daypartName[0]) | default('Waiting', true)}}
                         {% endif %}
                         {% if state_attr('sensor.pws_forecast_narrative_today','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_today','daypart')[0].narrative[0]) | default('Waiting', true)}}
                         {% endif %}"
      - name: "pws_forecast_narrative_tonight"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_narrative_tonight','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tonight','daypart')[0].daypartName[1])}}
                         {% endif %}
                         {% if state_attr('sensor.pws_forecast_narrative_tonight','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tonight','daypart')[0].narrative[1])}}
                         {% endif %}"
      - name: "pws_forecast_narrative_tomorrow"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_narrative_tomorrow','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tomorrow','daypart')[0].daypartName[2])}}
                         {% endif %}
                         {% if state_attr('sensor.pws_forecast_narrative_tomorrow','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tomorrow','daypart')[0].narrative[2])}}
                         {% endif %}"
      - name: "pws_forecast_narrative_tomorrow_tonight"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_narrative_tomorrow_tonight','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tomorrow_tonight','daypart')[0].daypartName[3])}}
                         {% endif %}
                         {% if state_attr('sensor.pws_forecast_narrative_tomorrow_tonight','daypart') == None %} {{'Waiting'}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_narrative_tomorrow_tonight','daypart')[0].narrative[3])}}
                         {% endif %}"
      - name: "pws_forecast_today"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_today','daypart') == None %} {{float('0')}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_today','daypart')[0].precipChance[0]) | default('0.0001', true)}}
                         {% endif %}"
      - name: "pws_forecast_tonight"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_tonight','daypart') == None %} {{float('0')}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_tonight','daypart')[0].precipChance[1])}}
                         {% endif %}"
      - name: "pws_forecast_tomorrow"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_tomorrow','daypart') == None %} {{float('0')}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_tomorrow','daypart')[0].precipChance[2])}}
                         {% endif %}"
      - name: "pws_forecast_tomorrow_tonight"
        json_attributes: "daypart"
        value_template: "{% if state_attr('sensor.pws_forecast_tomorrow_tonight','daypart') == None %} {{float('0')}}
                         {%- else -%} {{(state_attr('sensor.pws_forecast_tomorrow_tonight','daypart')[0].precipChance[3])}}
                         {% endif %}"



input_number:
  garden_watering_time:
    name: "Garden Watering Time"
    min: 0
    max: 90
    step: 1
    #mode: box
    unit_of_measurement: m
  lawn_watering_time:
    name: "Lawn Watering Time"
    min: 0
    max: 60
    step: 1
    #mode: box
    unit_of_measurement: m
  daily_calc_et:
    name: "Daily Calculated Evapotranspiration"
    min: 0
    max: 15
    step: 0.1
    mode: box
    unit_of_measurement: mm
  daily_rain_event:
    name: "Daily Rain Event"
    min: 0
    max: 50
    step: 0.1
    mode: box
    unit_of_measurement: mm
  daily_et:
    name: "Daily Evapotranspiration"
    min: 0
    max: 15
    step: 0.1
    mode: box
    unit_of_measurement: mm
  ledger_solana:
    name: "Ledger Solana"
    min: 0.0001
    max: 30
    step: 0.1
    mode: box
    unit_of_measurement: sol


input_text:
  irrigation_switch_1_l3_run_time: #Front Lawn West Irrigation
  irrigation_switch_1_l2_run_time: #Front Lawn East Irrigation
  irrigation_switch_1_l1_run_time: #Back Lawn South Irrigation
  irrigation_switch_1_l4_run_time: #Back Lawn North Irrigation
  irrigation_switch_2_l4_run_time: #Front Garden
  irrigation_switch_2_l3_run_time: #Back & Side Garden
  irrigation_switch_2_l2_run_time:
  irrigation_switch_1_l3_run_date:
  irrigation_switch_1_l2_run_date:
  irrigation_switch_1_l1_run_date:
  irrigation_switch_1_l4_run_date:
  irrigation_switch_2_l4_run_date:
  irrigation_switch_2_l3_run_date:
  irrigation_switch_2_l2_run_date:
  irrigation_switch_1_l3_run_duration:
  irrigation_switch_1_l2_run_duration:
  irrigation_switch_1_l1_run_duration:
  irrigation_switch_1_l4_run_duration:
  irrigation_switch_2_l4_run_duration:
  irrigation_switch_2_l3_run_duration:
  irrigation_switch_2_l2_run_duration:

input_select:
  irrigation_status:
    name: 'Irrigation Status'
    options:
      - Normal
      - Rain is coming
      - No moisture lost yesterday
      - Irrigation run time too small
      - It has rained
      - Soil Moisture too high
    

input_boolean:
  check_act_garbage:
    name: input_boolean.check_act_garbage
  check_dams:
    name: input_boolean.check_dams
  force_irrigation:
    name: input_boolean.force_irrigation
  check_odometer:
    name: input_boolean.check_odometer



binary_sensor:
  - platform: threshold
    entity_id: sensor.study_temp
    lower: 19.0
    upper: 22.0
    hysteresis: 0.0
    name: study_temp_thres_on
  - platform: threshold
    entity_id: sensor.study_temp
    lower: 20.0
    upper: 22.0
    hysteresis: 0.0
    name: study_temp_thres_off
  - platform: threshold
    entity_id: sensor.hollys_bedroom_temp
    lower: 19.0
    upper: 22.0
    hysteresis: 0.0
    name: hollys_bedroom_temp_thres_on
  - platform: threshold
    entity_id: sensor.hollys_bedroom_temp
    lower: 20.0
    upper: 22.0
    hysteresis: 0.0
    name: hollys_bedroom_temp_thres_off

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
